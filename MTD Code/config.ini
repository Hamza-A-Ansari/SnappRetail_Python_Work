[query_config]
query1 = SELECT st.Id AS Store_Id, DATE_FORMAT(CURDATE(), '%%%%d-%%%%m-%%%%Y') AS `MTD Date`, sum(sp.Amount) AS `MTD`, 1 AS `Active/Month`, CASE WHEN SUM(CASE WHEN DATE(s.saleTime) = CURRENT_DATE - INTERVAL 1 DAY THEN s.grossAmount ELSE 0 END) > 0 THEN 1 ELSE 0 END AS `LD Active`, count(distinct day(s.saleTime)) as `Active Days/Store`, (COUNT(DISTINCT CONCAT(DAY(s.saleTime), HOUR(s.saleTime)))) / DAY(DATE_SUB(CURDATE(), INTERVAL 1 DAY)) AS `Hours/Store/Day`, count(distinct CONCAT(DAY(s.saleTime), HOUR(s.saleTime), MINUTE(s.saleTime))) / DAY(DATE_SUB(CURDATE(), INTERVAL 1 DAY)) as `Min/Store/Day`, count(distinct s.uniqueInvoiceNumber) as `Total Invoices`, COUNT(DISTINCT s.uniqueInvoiceNumber) / DAY(DATE_SUB(CURDATE(), INTERVAL 1 DAY)) AS `Invoice/Store/Day`, sum(sp.Amount) / count(distinct s.uniqueInvoiceNumber) as `Value/Invoice/Store`, (count(sp.productId) / count(distinct s.uniqueInvoiceNumber)) as `SKU/Invoice/Store`, count(distinct sp.productId) as `Prod/Store/Day`, count(distinct p.SubCategory) as `SubCat/Store/Day`, count(distinct p.Category) as `Cat/Store/Day`, count(distinct p.SuperCategory) as `SupCat/Store/Day`, COALESCE(SUM(cr.amount), 0) as `Credit Sales`, count(distinct cr.uniqueInvoiceNumber) as `Credit Invoices`, (CASE WHEN ((0.3 * COUNT(DISTINCT p.Category)) / 43) * 100 > 30 THEN 30 ELSE ((0.3 * COUNT(DISTINCT p.Category)) / 43) * 100 END) AS `Cat/D Score`, (CASE WHEN ((0.3 * (CEIL((COUNT(DISTINCT CONCAT(DAY(s.saleTime), HOUR(s.saleTime)))) / DAY(DATE_SUB(CURDATE(), INTERVAL 1 DAY))))) / 10) * 100 > 30 THEN 30 ELSE ((0.3 * (CEIL((COUNT(DISTINCT CONCAT(DAY(s.saleTime), HOUR(s.saleTime)))) / DAY(DATE_SUB(CURDATE(), INTERVAL 1 DAY))))) / 10) * 100 END) AS `Hrs/D Score`, (CASE WHEN ((0.2 * (COUNT(DISTINCT s.uniqueInvoiceNumber) / DAY(DATE_SUB(CURDATE(), INTERVAL 1 DAY)))) / 50) * 100 > 20 THEN 20 ELSE ((0.2 * (COUNT(DISTINCT s.uniqueInvoiceNumber) / DAY(DATE_SUB(CURDATE(), INTERVAL 1 DAY)))) / 50) * 100 END) AS `Inv/D Score`, (CASE WHEN ((0.2 * (count(sp.productId) / count(distinct s.uniqueInvoiceNumber))) / 2) * 100 > 20 THEN 20 ELSE ((0.2 * (count(sp.productId) / count(distinct s.uniqueInvoiceNumber))) / 2) * 100 END) AS `SKU/Inv Score`, (CASE WHEN ((0.3 * COUNT(DISTINCT p.Category)) / 43) * 100 > 30 THEN 30 ELSE ((0.3 * COUNT(DISTINCT p.Category)) / 43) * 100 END + CASE WHEN ((0.3 * (CEIL((COUNT(DISTINCT CONCAT(DAY(s.saleTime), HOUR(s.saleTime)))) / DAY(DATE_SUB(CURDATE(), INTERVAL 1 DAY))))) / 10) * 100 > 30 THEN 30 ELSE ((0.3 * (CEIL((COUNT(DISTINCT CONCAT(DAY(s.saleTime), HOUR(s.saleTime)))) / DAY(DATE_SUB(CURDATE(), INTERVAL 1 DAY))))) / 10) * 100 END + CASE WHEN ((0.2 * (COUNT(DISTINCT s.uniqueInvoiceNumber) / DAY(DATE_SUB(CURDATE(), INTERVAL 1 DAY)))) / 50) * 100 > 20 THEN 20 ELSE ((0.2 * (COUNT(DISTINCT s.uniqueInvoiceNumber) / DAY(DATE_SUB(CURDATE(), INTERVAL 1 DAY)))) / 50) * 100 END + CASE WHEN ((0.2 * (count(sp.productId) / count(distinct s.uniqueInvoiceNumber))) / 2) * 100 > 20 THEN 20 ELSE ((0.2 * (count(sp.productId) / count(distinct s.uniqueInvoiceNumber))) / 2) * 100 END) AS `Total Score` FROM (select * from sale s WHERE DATE(s.saleTime) BETWEEN DATE_FORMAT(CURDATE(), '%%%%Y-%%%%m-01') AND DATE_SUB(CURDATE(), INTERVAL 1 DAY)) as s left join (select Id, storename, isActive from stores) st on s.storeId = st.Id left join saleproducts sp on s.Id = sp.SaleId left join (select Id, SuperCategory, Category, SubCategory from products) p on sp.productId = p.Id left join (select uniqueInvoiceNumber, amount from credit) cr on s.uniqueInvoiceNumber = cr.uniqueInvoiceNumber where st.Id is not null group by st.Id, st.Storename
query2 = select Id as Store_Id, storename as Store_Name, isActive as IsActive from stores
query3 = SELECT ST.STORE_CODE AS "Store_Id", count(DISTINCT MV.CHECKIN_TIME) AS "VISITS", CASE WHEN MAX(TRUNC(MV.CHECKIN_TIME)) = TRUNC(SYSDATE - INTERVAL '1' DAY) THEN 1 ELSE 0 END AS "LD_Visits" FROM GENERATED_VISIT_LOGS GV LEFT JOIN MERCHANDIZER_VISIT MV ON MV.GEN_VISIT_ID = GV.ID INNER JOIN REDBULL_RAW_STORES ST ON ST.ID = GV.STORE_ID LEFT JOIN MERCHANDIZER_CHECKOUT MC ON MC.VISIT_CODE = MV.VISIT_CODE WHERE TRUNC(GV.VISIT_DATE, 'MM') = TRUNC(SYSDATE - INTERVAL '1' DAY, 'MM') AND GV.VISIT_DATE < TRUNC(SYSDATE, 'DD') AND ST.STORE_CODE not like 'N%%' AND (CASE WHEN MV.ID IS NULL THEN 'NOT AUDITED' ELSE CASE WHEN MC.UNSUCCESSFUL_REASON IS NULL THEN 'SUCCESSFUL' ELSE 'NOT SUCCESSFUL' END END) = 'SUCCESSFUL' GROUP BY ST.STORE_CODE ORDER BY ST.STORE_CODE asc
query4 = select st.DukaanCoach as FE_Name, fs.Name as Supervisor, st.Id as Store_Id from stores st left join FieldSupervisor fs on st.FieldSupervisorId = fs.Id where st.Id is not null
query5 = select s.storeId as Store_Id, sum(isPrinted) as `Pr.Inv Count`, sum(case when isPrinted = 1 then grossAmount else 0 end) as `Pr.Inv Sales` from sale s WHERE DATE(s.saleTime) BETWEEN DATE_FORMAT(CURDATE(), '%%%%Y-%%%%m-01') AND DATE_SUB(CURDATE(), INTERVAL 1 DAY) group by s.storeId
query6 = SELECT rm.NAME, TO_CHAR(SYSDATE, 'DD-MM-YYYY') AS "MTD Date", count(EXTRACT(DAY FROM ma.TIMESTAMP)) AS Attendance, CASE WHEN MAX(TRUNC(ma.TIMESTAMP)) = TRUNC(SYSDATE - INTERVAL '1' DAY) THEN 1 ELSE 0 END AS "LD Attendance", TO_CHAR(SYSDATE - 1, 'DD') - count(EXTRACT(DAY FROM ma.TIMESTAMP)) AS Absents, sum(CASE WHEN ma.STARTING_POINT = 'Office' THEN 1 ELSE 0 END) AS "Meeting Attendance" FROM MERCHANDISER_ATTENDANCE ma LEFT JOIN REDBULL_MERCHANDISER rm ON ma.MERCHANDISER_ID = rm.ID WHERE TRUNC(ma.TIMESTAMP, 'MM') = TRUNC(SYSDATE - INTERVAL '1' DAY, 'MM') AND ma.TIMESTAMP < TRUNC(SYSDATE, 'DD') GROUP BY rm.NAME


[email_config]
recipient_email = hamza.ansari@snappretail.io
smtp_server = smtp.gmail.com
smtp_port = 587

# syedshaheryar20@gmail.com,sheikhfahad9042@gmail.com,ansub.rajput.72@gmail.com,shoaibsnapp@gmail.com,aliahmedkhan840@gmail.com,farazidrees07@gmail.com
# muhammad@snappretail.io,shahla@snappretail.io,mohsin@snappretail.io,saim.mustafa@snappretail.io

# ,tariq@snappretail.io